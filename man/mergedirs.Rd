% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{mergedirs}
\alias{mergedirs}
\title{The recursive file move that R is missing for some reason?}
\usage{
mergedirs(
  from,
  to = ".",
  backupdir = paste0("backup.", format(Sys.time(), "\%Y\%m\%d\%H\%M\%S")),
  mvpatt = c(),
  cleanup = getOption("cleanup", TRUE)
)
}
\arguments{
\item{from}{Directory from which to move all files.}

\item{to}{Directory where to move them.}

\item{backupdir}{Name of directory where to back up any existing files in
\code{to} that would otherwise be overwritten with files
from \code{from}.}

\item{mvpatt}{Character vector of regular expression patterns for files
to move to the backup directory even if they do not collide
with the new files.}

\item{cleanup}{Whether to delete the \code{from} directory.}
}
\description{
The recursive file move that R is missing for some reason?
}
\examples{
# source directory tree
dir.create(file.path('foo','boo'),recursive=TRUE);
file.create(file.path('foo',letters[1:5]));
file.create(file.path('foo','boo','boing.txt'));
dir.create(file.path('bar','boo'),recursive=TRUE);
file.create(file.path('bar',letters[3:6]));
file.create(file.path('bar','boo','boing.txt'));

mergedirs('foo','bar');

dir.exists('foo') # FALSE
dir.exists('bar') # TRUE
list.files('bar',recursive=TRUE);
}
