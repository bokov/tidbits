% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{factorclean}
\alias{factorclean}
\title{A function to re-order and/or rename the levels of a factor or
vector with optional cleanup.}
\usage{
factorclean(xx, lookuptable, reorder = T, unmatched = 1,
  droplevels = F, case = c("asis", "lower", "upper"), mapnato = NA,
  remove = "\\"", otherfun = identity, spec_mapper, var,
  fromto = c("code", "label"))
}
\arguments{
\item{xx}{a vector... if not a factor will be converted to
one}

\item{lookuptable}{matrix-like objects where the first column will
be what to rename FROM and the second, what to
rename TO. If there is only one column or if it's
not matrix-like, the levels will be set to these
values in the order they occur in `lookuptable`.
If there are duplicated values in the first column
only the first one gets used, with a warning.
Duplicate values in the second column are allowed
and are a feature.}

\item{reorder}{Whether or not to change the order of the factor
levels to match those in `lookuptable`. True by
default (logical). By default is `TRUE`, is set to
`FALSE` will try to preserve the original order of
the levels.}

\item{unmatched}{Scalar value. If equal to -1 and `reorder` is `TRUE`
then unmatched original levels are prepended to the
matched ones in their original order of occurence. If
equal to 1, then appended in their original order of
occurrence. If some other value, then they are all
binned in one level of that name. The (empty) new ones
always go to the end.}

\item{droplevels}{Drop unused levels from the output factor (logical)}

\item{case}{Option to normalize case (`'asis'`` leaves it as it was)
before attempting to match to `lookuptable`. One value
only}

\item{mapnato}{If the original levels contain `NA`s, what they should
be instead. They stay `NA` by default.}

\item{remove}{Vector of strings to remove from all level names (can
be regexps) before trying to match to `lookuptable`.}

\item{otherfun}{A user-specified function to make further changes to
the original level names before trying to match and
replace them. Should expect to get the output from
`levels(xx)` as its only argument.}

\item{spec_mapper}{A constrained lookup table specification that includes
a column named `varname` in addition to the two columns
that will become `from` and `to`. This is for extra
convenience in projects that use such a table. If you
aren't working on a project that already follows this
convention, you should ignore this parameter.}

\item{var}{What value should be in the `varname` column of
`spec_mapper`}

\item{fromto}{Which columns in the `spec_mapper` should become the
`from` and `to` columns, respectively. Vector of length
2, is `c('code','label')` by default.}
}
\description{
A function to re-order and/or rename the levels of a factor or
vector with optional cleanup.
}
